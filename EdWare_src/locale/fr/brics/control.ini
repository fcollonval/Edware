# * **************************************************************** **
#
# File: brics/control.ini
# Desc: Control file for the brics
# Note:
#
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License (in the docs/licenses directory)
# for more details.
#
# Svn: $Id: control.ini 51 2006-12-02 01:14:52Z briand $
# * **************************************************************** */

# DO NOT MODIFY (if you don't know what you are doing)
# THIS FILE IS NEEDED FOR PROPER FUNCTIONING OF THE PROGRAM

# Acceptable sections are:
#
# arrow (big_shaft, big_head, small_shaft, small_head, normal_colour, select_colour)
# group%d (name, colour, bmap, shrunk_bmap)
# device%d (name, group, bmap, sel_bmap, [help, helpfile])
# start (main_bmp, event_bmp)

[control]
highbric: 38

[arrow]
selleft: arrow_backward_highlight.png
selright: arrow_forward_highlight.png
left: arrow_backward.png
right: arrow_forward.png

[new]
bmap: new_event.png
selbmap: start_event.png

[end]
bmap: If_loop_end.png
selbmap: If_loop_end.png

[ifs]
# unused ones
bumper: If_blank
analogin: If_blank
digin: If_blank
pulse: If_blank
serial: If_blank

irrx: If_Infrared_Data_Received
tracker: If_line_detected
button: If_button
light: If_light_level
remote: If_remote
timer: If_timer
var: If_variable
clap: If_clap
obstacle: If_obstacle

[group1]
name: Control
expbmap: menu_control_highlight.png
colbmap: menu_control_highlight.png

[group2]
name: Read
expbmap: menu_read_highlight.png
colbmap: menu_read_highlight.png

[group3]
name: Data
expbmap: menu_data_highlight.png
colbmap: menu_data_highlight.png

[group4]
name: Flow
expbmap: menu_flow_highlight.png
colbmap: menu_flow_highlight.png

#[group5]
#name: Start
#expbmap: menu_start_highlight.png
#colbmap: menu_start.png

#[group5]
#name: Special
#expbmap: menu_advanced_highlight.png
#colbmap: menu_advanced.png

[bric5]
name: Motor
proptitle: Propriétés du contrôle unitaire
group: Control
bmap: motor.png
selbmap: motor_selected.png
disbmap: motor_faded.png
enable: D(Motor A;Motor B)

help:	Contrôle unitaire
	Contrôle un seul moteur selon les options suivantes:
	BLANKLINE
	Direction:
	La direction de déplacement du robot.
	Avant - Tourne la roue pour faire avancer le robot
	Arrière - Tourne la roue pour faire reculer le robot
	Stop - Arrêt immédiat par freinage
	Variable = 128 = Avant
	Variable = 64 = Arrière
	Variable = 192 = Stop
	BLANKLINE
	Vitesse:
	La vitesse est définie par la valeur du menu déroulant, de 0 à 10 (10 étant la plus rapide) ou par une variable (voir le manuel d'utilisateur pour plus d'informations).


[bric2]
name: Beep
proptitle: Propriétés du beep
propextratext: Emet un seul beep
               Fréquence: 3,5 kHz
               Durée: 50ms (0,05 secondes)
group: Control
bmap: beep.png
selbmap: beep_selected.png
disbmap: beep_faded.png
enable: D(Sounder)

help:	Emet un seul beed
	Fréquence: 3,5KHz
	Durée: 50ms (0,05 secondes)
	

[bric3]
name: Tone
proptitle: Propriétés de la mélodie
group: Control
bmap: tone.png
selbmap: tone_selected.png
disbmap: tone_faded.png
enable: D(Sounder)

# which beeper
# tone, freq, duration (constants or 8bit var)
# tune string (constant or 8bit var)

help:	Joue des notes musicales avec le haut-parleur. Cela peut être une seul note sélectionnée dans le menu déroulant ou une mélodie basée sur une chaine de caractère en suivant les conventions suivantes:
	BLANKLINE
	Une mélodie est définie comme ceci "ndndndndndnd..." (max 16 paires); n est une note (voir liste ci-dessous) et d est le temps de la note de 0 à 7 (chaque nombre correspond à un 20e de seconde).
	Liste de notes:
	m - A, 6e octave
	M - A#
	n - B
	c - C, 7e octave
	C - C#
	d - D
	D - D#
	e - E
	f - F
	F - F#
	g - G
	G - G#
	a - A
	A - A#
	b - B
	o - C, 8e octave
	R - Pause
	

[bric9]
name: Set Timer
proptitle: Propriétés de la minuterie
group: Control
bmap: timer.png
selbmap: timer_selected.png
disbmap: timer_faded.png
enable:

help:	La minuterie fonctionne en arrière-plan. Tu peux l'utiliser pour déterminer le temps nécessaire à la réalisation d'un action ou pour arrêter quelque chose après un certain temps.
	BLANKLINE
	La minuterie n'est PAS une horloge. Il ne peut te donner l'heure!! C'est un compte à rebours
	BLANKLINE
	Il est important de noter que:
	* La minuterie DECOMPTE le temps.
	* Si tu veux sauvegarder la valeur du minuteur dans une variable, celle-ci doit être du type "mot" (+/-32767).


[bric7]
name: LineTracker
proptitle: Propriétés du détecteur de lignes
group: Control
bmap: Linetracker.png
selbmap: Linetracker_selected.png
disbmap: Linetracker_faded.png

enable: D(Line Tracker)
# if line_tracker
# led level (constant or 8bit var)

help:	Active le détecteur de ligne et contrôle la LED du détecteur en l'allumant ou l'éteignant. Si une variable est utilisée pour contrôler la LED, la valeur 0 éteindra la LED et 1 l'allumera.
	
[bric4]
name: Obstacle Detection
proptitle: Propriétés du détecteur d'obstacles
group: Control
bmap: detect_obsacle.png
selbmap: detect_obsacle_selected.png
disbmap: detect_obsacle_faded.png

enable: D(IR Transmitter)
# if line_tracker
# led level (constant or 8bit var)

help:	 Allume ou éteint le détecteur d'obstacles
         BLANKLINE
         Quand le détecteur d'obstacles est allumé, Edison ne peut pas recevoir de données d'une télécommande ou d'un autre Edison.
         BLANKLINE
         0 = éteint le détecteur d'obstacles
         2 = allume le détecteur d'obstacles


[bric8]
name: Infrared Data Out
proptitle: Propriétés de la transmission de données
group: Control
bmap: infrared_data_out.png
selbmap: infrared_data_out_selected.png
disbmap: infrared_data_out_faded.png
enable: D(IR Transmitter)
# which transmitter
# const or 8bit var
 
help:	Envoie les données via infrarouge vers un autre Edison. Un caractère ou une variable peut être envoyé. Attention seules les variables de 8 bits (intervalle de 0 à 255) peuvent être envoyées. 


[bric12]
name: Button
proptitle: Propriétés du lecteur des touches d'Edison
group: Read
bmap: button.png
selbmap: button_selected.png
disbmap: button_faded.png
enable: U

help: Sauvegarde l'état des touches d'Edison dans la variable sélectionnée
      BLANKLINE
      1 = Appui sur le bouton Jouer (triangle)
      3 = Appui sur le bouton Enregistrer (rond)
      BLANKLINE
      Le bouton carré arrête l'exécution d'un programme. Il ne peut donc pas être lu.

[bric13]
name: Read Clap Detect
proptitle: Propriétés du détecteur de sons
group: Read
bmap: clap.png
selbmap: Clap_selected.png
disbmap: Clap_faded.png
enable: U

help: Sauvegarde l'état du détecteur de sons dans une variable et L'EFFACE!
      BLANKLINE
      0 = aucun son détecté
	  4 = son détecté

[bric18]
name: Read Distance
proptitle: Propriétés du lecteur de distance
group: Hide
bmap: read_distance.png
selbmap: read_distance_selected.png
disbmap: read_distance_faded.png
enable: S

help: Lit la distance actuelle d'avancement d'un moteur

[bric11]
name: Read Obstacle Detect
proptitle: Propriétés du détecteur d'obstacles
group: Read
bmap: detect_obsacle2.png
selbmap: detect_obsacle2_selected.png
disbmap: detect_obsacle2_faded.png
enable: U

help: Sauvegarde l'état du détecteur d'obstacles dans une variable et L'EFFACE!
      BLANKLINE
      Remarque : Plusieurs valeurs disponibles simultanément
      BLANKLINE
         0 = pas d'obstacles détectés
         72 = obstacle détecté à droite
         80 = obstacle détecté devant
         96 = obstacle détecté à gauche
         64 = obstacle détecté (peut être devant, à gauche ou à droite)

[bric16]
name: Light Level
proptitle: Propriétés du capteur de lumière
group: Read
bmap: light-_level.png
selbmap: light-_level_selected.png
disbmap: light-_level_faded.png
enable: D(Line Tracker;LED)S

# Only if line tracker so only 1 possibility
# 16bit var to put the level

help: 	Sauvegarde le niveau de lumière actuel depuis les capteurs gauche et droit et de détecteur de lignes (niveau de lumière de ligne) dans une variable. Remarque cela requière une variable avec un intervalle +/-32767.


[bric19]
name: Read Timer
proptitle: Propriétés du lecteur de la minuterie
group: Read
bmap: timer02.png
selbmap: timer02_selected.png
disbmap: timer02_faded.png
enable: S

# 16bit var to put current time in

help: 	Sauvegarde le nombre actuel de la minuterie dans la variable sélectionnée.
        Remarque une variable à 16 bits (+/-32767 range) doit êre créée avant d'utiliser cette icône.



[bric14]
name: Line Tracker
proptitle: Propriétés du détecteur de lignes
group: Read
bmap: Linetracker02.png
selbmap: Linetracker02_selected.png
disbmap: Linetracker02_faded.png
enable: D(Line Tracker)U

# 8bit var to put the status (0, 1) into

help:	Sauvegarde le status actuel du détecteur de lignes dans le registre.
	BLANKLINE
	Sur du noir = 0 (Lumière non-réfléchie)
	Sur du blanc = 1 (Lumière réfléchie)


[bric17]
name: Infrared Data In
proptitle: Propriétés du receveur de données
group: Read
bmap: infrared_in.png
selbmap: infrared_in_selected.png
disbmap: infrared_in_faded.png
enable: D(IR Receiver)U

# which receiver
# 8bit char to put character in

help:	Sauvegarde la dernière donnée reçue par infrarouge dans la variable 8 bits choisie.


[bric15]
name: Remote
proptitle: Propriétés du contrôlleur à distance
group: Read
bmap: remote.png
selbmap:remote_selected.png
disbmap:remote_faded.png
enable: D(IR Receiver)U

# which receiver
# 8bit char to put match in

help: 	Sauvegarde la dernière commande reçue de la télécommande dans la variable 8 bits choisie.


[bric25]
name: Set Memory
proptitle: Propriétés de la définition d'une mémoire
group: Data
bmap: set_memory.png
selbmap: set_memory_selected.png
disbmap: set_memory_faded.png
enable: V

help: 	Sauvegarde une valeur (donnée) dans une variable.
        BLANKLINE
        La position d'une mémoire est appellée "variable". Dans EdWare, il y a deux types de variables:
        BLANKLINE
        1. Une variable 8 bits, appellée "octet", qui a un intervalle de 0 à 255.
        2. Une variable de 16 bits, appellée "mot", qui a un intervalle de -32 767 to +32 767.
        BLANKLINE
        Ce type de mémoire est parfois appellée mémoire "bloc-notes" car elle est généralement écrite et ré-écrite de nombreuses fois lors de l'exécution du programme. C'est aussi une mémoire "volatile"; c'est-à-dire que les variables sont perdues lorsque les piles sont plates.


[bric23]
name: Increment
proptitle: Propriétés de l'incrément
group: Data
bmap: increment1.png
selbmap: increment1_selected.png
disbmap: increment1_faded.png
enable: V

help:	Incrémente (ajoute 1) à la variable sélectionnée.

[bric26]
name: Copy
proptitle: Propriétés de la copie de données
group: Data
bmap: copy.png
selbmap: copy_selected.png
disbmap: copy_faded.png
enable: V

# two variable names

help: Copie une donnée d'une variable vers une autre.

[bric27]
name: Maths Basic
proptitle: Propriétés de la calculette d'"octet"
group: Data
bmap: maths.png
selbmap: maths_selected.png
disbmap: maths_faded.png
enable: U

# expression with variable names

help: 	Applique des opérations mathématiques sur les varibles 8 bits variant de 0 à 255. Le résultat (réponse) est sauvegardé dans la variable sélectionné au-dessus.


[bric31]
name:  If
proptitle: Propriétés du Si
group: Flow
bmap:  if_else.png
selbmap: if_else_selected.png
disbmap: if_else_faded.png

# specials - if char rx, etc
# expression

help:	Sépare le chemin du programme en prenant une décision :
        BLANKLINE
        SI vrai (V) alors fais ceci...
        OU
        SI pas vrai (X) alors fais cela...
        BLANKLINE
        Il y a deux façons d'utiliser l'icone SI :
        BLANKLINE
        1. Compare une variable à une valeur définie. Les options sont :
        = Egal à
        != Différent de
        < Plus petit que
        > Plus grand que
        <= Plus petit ou égale à
        >= Plus grand ou égale à
        SI le résultat est vrai, le programme prend le chemin vrai (V)
        SI le résultat n'est PAS vrai, alors le programme suit le chemin faux (X)
        BLANKLINE
        2. Vérifie SI un évènement s'est produit. Les évènements peuvent être sélectionnés depuis le menu déroulant



[bric30]
name:  Loop
proptitle: Propriétés de la boucle
group: Flow
bmap:  If_loop.png
selbmap: If_loop_selected.png
disbmap: If_loop.png

help:	Répète les icônes du programme placées dans la boucle.
        BLANKLINE
        Il y a trois types de boucle :
        BLANKLINE
        1. Boucle indéfiniment. 
        BLANKLINE
        2. Passe un test - Boucle jusqu'à ce que la valeur de la variable sélectionnée soit :
        = Egal à
        != Différent de
        < Plus petit que
        > Plus grand que
        <= Plus petit ou égal à
        >= Plus grand ou égal à
        ... la valeur choisie
        BLANKLINE
        3. Apparition d'un évènement - boucle jusqu'à ce que l'évènement se produit. Les évènements peuvent être sélectionnés dans le menu déroulant

 
[bric29]
name:  Wait
proptitle: Propriétés de l'évènement attendre
group: Flow
bmap:  wait.png
selbmap: wait_selected.png
disbmap: wait_faded.png

# events
# time - var or const

help:	Arrête le programme et attend que: 
        BLANKLINE
        1. Un certain temps soit écoulé - Maximum 327,67 secondes avec une précision de 0,01 secondes (10 ms).
        ou
        BLANKLINE
        2. Un évènement se produit. L'évènement peut être sélectionné dans un menu déroulant.

 
[bric28]
name: Maths Advanced
proptitle: Propriétés de la calculatrice de "mots"
group: Data
bmap: maths_advanced.png
selbmap: maths_advanced_selected.png
disbmap: maths_advanced_faded.png
enable: S

# expression with variable names

help: 	Applique des opérations mathématiques sur les varibles 16 bits variant sur la plage +/-32 767. Le résultat (réponse) est sauvegardé dans la variable sélectionné au-dessus.


[bric33]
name:  EndIf
group: Hide
bmap:  If_blank.png
selbmap: If_blank_selected.png
disbmap: If_blank_faded.png

# specials - if char rx, etc
# expression

help:  Prend une décision basée sur des variables.

[bric37]
name:  EndLoop
group: Hide
bmap:  If_loop_end.png
selbmap: If_loop_end.png
disbmap: If_loop_end_faded.png

# specials - if char rx, etc
# expression

help:  Prend une décision basée sur des variables.

[bric38]
name:  EndEvent
group: Hide
bmap:  end_event.png
selbmap: end_event.png
disbmap: end_event.png

# specials - if char rx, etc
# expression

help:  Prend une décision basée sur des variables.

[bric34]
name: Main
group: Hide
bmap: start.png
selbmap: start.png
disbmap: start.png
enable: A
help:

[bric35]
name: Event
group: Flow
#group: Hide
bmap: start_event.png
selbmap: start_event_selected.png
disbmap: start_event_faded.png
enable: E
# event type

help: 

[bric36]
name: Last
group: Hide
bmap: End.png
selbmap: End.png
disbmap: End.png
enable: A
help:



[bric6]
name: Motor Pair
proptitle: Propriétés du contrôleur de double moteurs
group: Control
bmap: motor_pair.png
selbmap: motor_pair_selected.png
disbmap: motor_pair_faded.png
enable: P

help: 	Contrôle les deux moteurs en utilisant les options suivantes :
        BLANKLINE
        Direction :
        La direction réfère à la direction de déplacement du robot.
        Avancer - Tourne les roues pour faire avancer le robot
        Reculer - Tourne les roues pour faire reculer le robot
        Avancer vers la droite - Tourne les roues pour faire tourner le robot à droite
        Avancer vers la gauhce - Tourne les roues pour faire tourner le robot à gauche
        Tourner à droite - Tourne les roues du robot pour qu'il tourne sur lui-même dans le sens des aiguilles d'une montre
        Tourner à gauche - Tourne les roues du robot pour qu'il tourne sur lui-même dans le sens contraire des aiguilles d'une montre
        Reculer vers la droite - Tourne les roues pour faire reculer le robot vers la droite
        Reculer vers la gauche - Tourne les roues pour faire reculer le robot vers la gauche
        Arrêter - Arrête immédiatement en freinant
        BLANKLINE
        Vitesse :
        La vitesse est sélectionnée dans le menu déroulant de 1 à 10 (10 est la plus rapide) ou en sélectionnant une variable.


[bric1]
name: LED
proptitle: Propriétés d'une LED
group: Control
bmap: LED.png
selbmap:LED_selected.png
disbmap:LED_faded.png
enable: D(LED)

help: 	Allume ou éteint une LED en utilisant la sélection du menu déroulant ou en utilsant une variable 0 = éteinte, 1 = allumée.


[bric24]
name: Decrement
proptitle: Propriétés du décrement
group: Data
bmap: decrement1.png
selbmap: decrement1_selected.png
disbmap: decrement1_faded.png
enable: V

help: 	Décrémente (diminue de 1) la variable choisie.




